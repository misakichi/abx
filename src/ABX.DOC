バッチ生成支援　ABX v1.00



■　はじめに

　　ABX は以下のような使い方があります。

　　　[1] どっかのディレクトリにある、とあるファイルを探す。

	　　例) abx -r a:\filename.ext
		A:のディレクトリのどっかにある filename.extを探す.

      [2] 指定ファイル名を検索し, 該当ファイル名の各々に対し、某かの
	  コマンドを実行するバッチを生成する。

	　　例) abx *.MKI =MAG $f$nPI -S $g >a.bat
		カレントディレクトリにあるすべての.MKI画像ファイルを、
		MAG.exeで表示しPi.exeでセーブすることで.PIファイルに
		変換するバッチ a.bat を生成.

      [3] 指定ファイル名を検索し, 該当ファイル名の各々に対し、某かの
	　コマンドを実行するバッチを生成し、そく実行する。

	　　例) abx -x *.MKI =MAG $f$nPI -S $g
		カレントディレクトリにあるすべての.MKI画像ファイルを、
		MAG.exeで表示しPi.exeでセーブすることで.PIファイルに
		変換するバッチを生成して、それを実行.

　　　[4] 複数の変換方法を記述した定義ファイルを用意し、そのうち１つ
	　の変換方法を用いて、検索したファイルに対し某かのコマンドを
	　実行するバッチを生成／実行する。

	　　例) abx +cg_cnv :mki2pi *
		定義ファイル cg_cnv.abx で定義された変換方法 :mki2pi
		を用いて、.MKI ファイルを.PIファイルに変換する。



■　起動方法

　　　abxの使い方は大別して、■はじめに、に書いた[1]〜[3] のように、
    その場でちょこちょこっと変換方法を指定してバッチを作るばあいと、
    [4] のように予め変換方法を集めた定義ファイルを作ってそれを用いる
　　場合の２つに別れます。

　　　コマンドラインでの指定方法は以下のような感じです。

	(1) abx [-ｵﾌﾟｼｮﾝ] [ﾌｧｲﾙ名] [=変換文字列]

	(2) abx [+ABXFILE] :変換名 [-ｵﾌﾟｼｮﾝ] [ﾌｧｲﾙ名]

    オプションとファイル名は順番が混ざっていてもかまいません。
    オプションを処理したあと、まとめてファイル名の処理をします。

    (1),(2)とも上記以外に@RESFILE（レスポンスファイル指定）, $文字列
    （変数$1〜$9の設定）という指定もあります　（ -オプションと一緒に
    処理されます）。

    =変換文字列 は、 後ろにしかおけません（というか = が現れた時点で
    以降は、変換文字列として扱われます）。

    =変換文字列 が省略されたばあいは（定義ファイル／レスポンスファイ
    ルにも記述されていない場合は）、=$f （フルパス表示）が指定された
    ことになります。



■　ファイル名指定でのワイルドカード文字

  　　ファイル指定ではワイルド・カード機能があり、以下の

	*     　0文字以上の任意の文字列に一致
	?     　任意の一文字に一致
	[..]  　[ ] 内の文字列のどれか一文字に一致
	[^..] 　[^ ] 内の文字列以外の一文字に一致
		括弧内では 0-9 のように'-'による範囲指定も可
          　　　また、括弧内では他のワイルドカード文字は機能しない

  　があります。また、パスの区切りとして \ だけでなく / も使えます。



■　-オプション

　　-で始まるオプションは以下のものがあります。
　　（/ はオプションではなく、パスの区切りとして使われます）

	-x	  バッチ実行する
		  テンポラリ・ディレクトリに _ABX_TMP.BAT というバッ
		  チ・ファイルを生成し、そのバッチを実行します。
		　生成されたバッチ・ファイルは削除されません。
	
	-x-	　バッチ実行しない。
		　主に、定義ファイルで設定された -x を抑止するのを想
		　定しています。

	-r	  ディレクトリ再帰検索する。
		  ファイル検索において、指定ディレクトリだけでなく、
		  その下にあるサブディレクトリに対しても検索を行いま
		  す。

	-r-	  ディレクトリ再帰検索しない
		　主に、定義ファイルで設定された -r を抑止するのを想
		　定しています。

	-a{nrhsda} 検索ファイルの属性指定.
		  検索ファイルのファイル属性を設定します。

		  n	  nomal 属性のファイルを検索
		  r	  Read Only 属性のファイルを検索
		  h	  Hidden 属性のファイルを検索
		  s	  System 属性のファイルを検索
		  d	  ﾃﾞｨﾚｸﾄﾘ属性のファイルを検索
		  a	  ｱｰｶｲﾌﾞ属性のファイルを検索

		  指定はもちろん一度に複数可能です。
		　基本的に指定した属性の何れかを持つファイルにマッチ
		　します。
		　が、Hidden & System をもつファイルは, h だけや sだ
		　けではマッチせず hs でないと駄目だったり、アーカイ
		  バ属性の扱いも？だったりします。
		  （DOSの不思議ということで^^;）

		  -a オプションの指定のない場合は -anrhsa （ディレク
		  トリ以外のファイル）が指定されたことになります。

	-b	  先頭にecho off、末に:ENDを付加
		  生成するバッチ・ファイルの先頭に echo off を付加し、
		  ファイル末に:END を付加します。
	
	-b-	  -b を抑止する
		　主に、定義ファイルで設定された -b を抑止するのを想
		　定しています。

	-o<FILE>  出力ﾌｧｲﾙ指定
		  生成した内容を<FILE>に出力します。
		  -x とは併用しないでください。

	-i<DIR>   検索ﾃﾞｨﾚｸﾄﾘ指定
		　ファイル指定で、相対パス指定されたファイル名の基準
		　ディレクトリをカレントでなく <DIR> にします。
		  絶対パス指定されたファイル名に対しては無効です。

	-w<DIR>   ﾃﾝﾎﾟﾗﾘ･ﾃﾞｨﾚｸﾄﾘ指定
		  バッチ実行や $w で参照されるテンポラリ・ディレクト
		  リを環境変数 TMP（またはTEMP）でなく <DIR>にします。

	-e<EXT>   ﾃﾞﾌｫﾙﾄ拡張子指定
		  指定されたファイル名に拡張子がついていないときに補
		  う拡張子を設定します。
		  主に定義ファイル中での指定を想定しています。
		　そのため特別に <EXT>として変数 $1〜$9 を指定するこ
		  とができます。


　　　指定は、-x -r のように分けて指定してください. 　-xr のようには
　　できません。ただし -a のみ、 -an -ar -ah でも -anrh でもかまいま
　　せん。



■　=変換文字列　−−　生成するテキスト（バッチ）の記述

　　　コマンドラインにおいて =以降の部分は生成するテキストの記述とな
　　り、$変換文字以外は、そのまま出力されます。

　　　$変換文字として以下のものがあります。
    （$c $x $p 等の一部は filmtn(ﾌｧｲﾙﾒﾝﾃﾅﾝｽ)のマクロをマネさせていた
    　だきました... てか、マネたかったけど用途の違いにより非互換部分
    　が多くなったとも:-）

	$f	ﾌﾙﾊﾟｽ(拡張子付)   	例) d:\dir\dir2\filename.ext

	$g	ﾌﾙﾊﾟｽ(拡張子無)   	例) d:\dir\dir2\filename

	$v	ﾄﾞﾗｲﾌﾞ            	例) d
	  	: は付かない。

	$p	ﾃﾞｨﾚｸﾄﾘ(ﾄﾞﾗｲﾌﾞ付)	例) d:\dir\dir2
	  	後ろに \ は付かない。

	$d	ﾃﾞｨﾚｸﾄﾘ(ﾄﾞﾗｲﾌﾞ無)	例) \dir\dir2
	  	後ろに \ は付かない。

	$c	ﾌｧｲﾙ(拡張子付)		例) filename.ext

	$x	ﾌｧｲﾙ(拡張子無)		例) filename

	$e	拡張子        		例) ext
	  	. は付かない。

	$w	ﾃﾝﾎﾟﾗﾘ･ﾃﾞｨﾚｸﾄﾘ. 
		コマンドラインで -w 指定時はその場所を、 なければ環境
		変数TMP(なければTEMP)の内容を、フルパスに変換したもの。
		後ろに \ は付かない。

	$1〜$9	コマンドラインで$指定された文字列。
		または定義ファイルにおいて、変換名検索で{〜}でマッチ
		した文字列。
		1〜9個まで。番号は出現順に振り当てられる.

	$$	$ そのもの

	$n	改行

	$t	タブ

	$s	空白


　　　コマンドラインの =以降において、連続した空白(ﾀﾌﾞやｽﾍﾟｰｽ)を置い
    た場合、生成されたテキスト（バッチ）においては、それらが１つの空
    白になったり、また、行末に置いた覚えのない空白が挿入されたりする
    ばあいがありますが、これらは仕様なので、気にしないでください:-）



■　レスポンス・ファイル

      レスポンス・ファイルは、コマンド・ラインで @resfile で指定され
    るファイルで、-オプション、ファイル、=変換文字列をそのファイルよ
    り読み込みます。

　　　=変換文字列以外に関しては、改行は空白とみなし、処理されます。
　　また、# が見つかれば行末までをコメントとみなし空白として扱います。

　　　問題は = の扱いで、 コマンド・ラインとは少々違い、変換文字列の
　　指定は = の直後からでなく、=のあった行の次の行から、ファイルの終
　　わりまでとなります。また、改行が改行として扱われます（無理に$nと
　　かを使う必要がなくなります）。　
    $変換文字による変換以外は行わずそのまま文字列を出力するため、#コ
    メントは使えません。



■　定義ファイル(.ABX) を使うとき

　　　定義ファイルを用いた利用方法は以下のようになります。

	(2) abx [+ABXFILE] :変換名 [-ｵﾌﾟｼｮﾝ] [ﾌｧｲﾙ名]

　　+ABXFILE で指定されるファイルが定義ファイルで拡張子は .ABXです。
　　.ABX ファイルは、abx.exeと同じディレクトリに置く必要があります。
　　（ようするに、相対パス指定ならば abx.exeのあるディレクトリを基準
　　　にし、フルパス指定ならばそのパスより読込みます）
　　このファイル指定は省略可能で、そのばあい abx.abx が読込ます。

    :変換名 は : で始まり空白(ｽﾍﾟｰｽ,ﾀﾌﾞ)以外の文字からなる文字列です.
　　:変換名 は、.ABXファイル中で定義された変換名で、この :変換名が指
　　定された段階で .ABX ファイルは読み込まれます（つまり、+ABXFILEが
　　指定されても :変換名が指定されないと読み込まれません）。




■　定義ファイル(.ABX)の書き方





■　おわりに


					NIFTY  NBB00541 てんかﾐ☆
